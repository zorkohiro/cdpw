#!/bin/bash
#
# Spawn the editor on the study UUID with the template passed, e.g.:
#
#  spawn_editor template_name uuid
#
if [[ -z "$KP_REPORT_TESTING" ]]; then
 #
 # This horrible stuff allows us to spawn an X application via
 # a callout from a C++ program has no X support information
 # since it is invoked vis systemd. This mutter nonsense
 # is for gnome3 under Ubuntu 24.04 vanilla Canonical.
 #
 XDG_RUNTIME_DIR=/run/user/$UID
 if [[ -d ${XDG_RUNTIME_DIR} ]]; then
  XAUTHORITY=$(ls ${XDG_RUNTIME_DIR}/.mutter* 2>/dev/null)
  if [[ -n "${XAUTHORITY}" ]]; then
   export XAUTHORITY
   export XDG_RUNTIME_DIR
   export DISPLAY=:0
  else
   unset XDG_RUNTIME_DIR
  fi
 fi
 if [[ -z "${XDG_RUNTIME_DIR}" && -f $HOME/.Xauthority ]]; then
  # This is all a hack for using a tightvnc window with Xfce
  export DISPLAY=:1
  export XAUTHORITY=$HOME/.Xauthority
 fi
 export PATH=/usr/local/bin:/usr/bin:/usr/sbin
 TPD=/usr/lib/kp-report/Templates
else
 TPD=${HOME}/cdpw/cdpw-report/Templates
fi
CDB=/code_dark
RPT=${CDB}/reports
LOG=${CDB}/logs/spawn_editor.log

echo $* on `date` >> $LOG 2>&1
if [[ $# -ne 2 ]]; then
 echo "usage: $(basename $0) template orthanc-uuid" >> $LOG
 exit 1
fi
tpt=$1
uui=$2
mkdir -p ${RPT} >> $LOG 2>&1
inp="${TPD}/${tpt}.json"
fnm="${RPT}/${uui}.json"
prg=code_dark_rptgen

if [[ ! -f "${fnm}" ]]; then
 if [[ ! -f ${inp} ]]; then
  echo ${inp} does not exist >> $LOG
  exit 1
 fi
 #
 # Initial copy needs some values grafted in
 #
 sdt=$(GetStudyDate -r $uui)
 if [[ $sdt == "null" ]]; then sdt= ; fi
 dsc=$(curl -s http://localhost:8042/studies/${uui} | jq -r .MainDicomTags.StudyDescription)
 if [[ $dsc == "null" ]]; then dsc= ; fi
 ssn=$(curl -s http://localhost:8042/studies/${uui} | jq -r .MainDicomTags.AccessionNumber)
 if [[ $ssn == "null" ]]; then ssn= ; fi
 mrn=$(curl -s http://localhost:8042/studies/${uui} | jq -r .PatientMainDicomTags.PatientID)
 if [[ $mrn == "null" ]]; then mrn= ; fi
 sid=$(curl -s http://localhost:8042/studies/${uui} | jq -r .PatientMainDicomTags.StudyID)
 if [[ $sid == "null" ]]; then sid= ; fi
 rqp=$(curl -s http://localhost:8042/studies/${uui} | jq -r .PatientMainDicomTags.RequestingPhysician)
 if [[ $rqp == "null" ]]; then rqp= ; fi
 dob=$(curl -s http://localhost:8042/studies/${uui} | jq -r .PatientMainDicomTags.PatientBirthDate)
 if [[ -z "$dob" && "$dob" == "null" ]]; then
  yro=
 elif [[ -n "$dob" ]]; then
  short_sdt=$(GetStudyDate $uui | sed 1d | awk ' { print $2 }')
  if [[ -n "$short_sdt" && "$short_sdt" != "null" ]]; then
   yro=$(age_in_years $dob $short_sdt)
  else
   yro=
  fi
 fi
 sed \
  -e "s/\"uuid.*$/\"uuid\" : \"${uui}\",/"               \
  -e "s/\"date.*$/\"date\" : \"${sdt}\",/"               \
  -e "s/\"description.*$/\"description\" : \"${dsc}\",/" \
  -e "s/\"mrn.*$/\"mrn\" : \"${mrn}\",/"                 \
  -e "s/\"session.*$/\"session\" : \"${ssn}\",/"         \
  -e "s/\"studyid.*$/\"studyid\" : \"${sid}\",/"         \
  -e "s/\"doctor.*$/\"doctor\" : \"${rqp}\",/"           \
  -e "s/\"yrold.*$/\"yrold\" : \"${yro}\",/"           \
  $inp > "$fnm" 2>> $LOG
 if [[ $? -ne 0 ]]; then
  echo unable to create "$fnm" from $inp >> $LOG
  rm -f "${fnm}"
  exit 1
 fi
 chmod +w "$fnm"
else
 st=$(stat -c%A "${fnm}")
 echo "${fnm}" already exists with mode $st >> $LOG
fi

echo calling $prg -j "$fnm" on `date` >> $LOG
${prg} -j "$fnm"  >> $LOG 2>&1
if [[ $? -ne 0 ]]; then
 echo $prg exited witn non-zero status >> $LOG
fi
