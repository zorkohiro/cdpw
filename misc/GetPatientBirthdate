#!/bin/bash
exval=0

function is_leap_year()
{
 yr=$1
 if [[ $((yr % 4)) -eq 0 ]]; then
  if [[ $((yr % 100)) -eq 0 && $((yr % 400)) -ne 0 ]]; then
   echo 0
   return
  fi
 else
  echo 0
  return
 fi
 echo 1
}

if [[ $# == 1 ]]; then
 list=$1
elif [[ $# -gt 1 ]]; then
 echo "usage: $(basename $0) [uuid]"
 exit 1
else
 list=$(curl -s http://localhost:8042/studies |  jq -r .[])
fi
tmpfil=$(mktemp)

for study in $list; do
 isbad=0
 curl -s  http://localhost:8042/studies/${study} > $tmpfil
 if [[ ! -s $tmpfil  ]]; then
  oldpd="(nostudy)"
  pdstr="This uuid lookup returned nothing"
  isbad=1
 else
  pdstr=$(jq -r  .PatientMainDicomTags.PatientBirthDate < $tmpfil)
  oldpd=$pdstr
  if [[ -z "$pdstr" || $pdstr == "null" ]]; then
   oldpd="(null)"
   pdstr="No patient birthdate found"
   isbad=1
  else
   #
   # Validate birthdate
   #
   wc=$(echo $pdstr|wc -c)
   if [[ $wc -ne 9 ]]; then
    pdstr=BAD1XX
    isbad=1
   else
    if test "$pdstr" -eq 0 -o "$pdstr" -ne 0 2> /dev/null; then
     # We are good
     :
    else
     pdstr=BAD2XX
     isbad=1
    fi
   fi
  fi
 fi
 if [[ $isbad -eq 0 ]]; then
  # Now split into Y M D and validate those
  year=$(echo $pdstr |sed -e 's/....$//')
  mon=$(echo $pdstr  |sed -e 's/^....//' -e 's/..$//' -e 's/^0//')
  day=$(echo $pdstr  |sed -e 's/^......//' -e 's/^0//')
  is_lp=$(is_leap_year $year)
  if [[ $year -lt 1850 || $year -gt 2100 ]]; then
   pdstr="bad year"
   isbad=1
  elif [[ $mon -lt 1 || $mon -gt 12 ]]; then
   pdstr="bad month"
   isbad=1
  elif [[ $day -lt 1 ]]; then
   pdstr="bad zero day"
   isbad=1
  elif [[ $mon -eq 2 ]]; then
   if [[ $is_lp -eq 1 ]]; then
    if [[ $day -gt 29 ]]; then
     pdstr="bad number of days for februrary for this leap year"
    fi
   else
    if [[ $day -gt 28 ]]; then
     pdstr="bad number of days for februrary for this year"
     isbad=1
    fi
   fi
  else
   case $mon in
   9|4|6|11)
    if [[ $day -gt 31 ]]; then
     pdstr="bad number of days for September or April or June or November"
     isbad=1
    fi
    ;;
   *)
    if [[ $day -gt 30 ]]; then
     pdstr="bad number of days for all other months except feb"
     isbad=1
    fi
    ;;
   esac
  fi
  if [[ $isbad -ne 0 ]];  then
   echo $study $pdstr was $oldpd
   ((exval++))
  else
   echo $study $pdstr $year $mon $day
  fi
 else
  echo $study $pdstr was $oldpd
  ((exval++))
 fi
done

if [[ $# -eq 1 ]]; then
 exit $exval
fi
